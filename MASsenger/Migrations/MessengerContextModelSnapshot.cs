// <auto-generated />
using System;
using MASsenger;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MASsenger.Migrations
{
    [DbContext(typeof(MessengerContext))]
    partial class MessengerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("BaseUserChannelGroupChat", b =>
                {
                    b.Property<ulong>("ChannelGroupsJoinedId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelGroupsJoinedId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("BaseUserChannelGroupChat");
                });

            modelBuilder.Entity("BaseUserChannelGroupChat1", b =>
                {
                    b.Property<ulong>("AdminsId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelGroupsManagedId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdminsId", "ChannelGroupsManagedId");

                    b.HasIndex("ChannelGroupsManagedId");

                    b.ToTable("BaseUserChannelGroupChat1");
                });

            modelBuilder.Entity("BaseUserChannelGroupChat2", b =>
                {
                    b.Property<ulong>("BannedId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelGroupsBannedFromId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BannedId", "ChannelGroupsBannedFromId");

                    b.HasIndex("ChannelGroupsBannedFromId");

                    b.ToTable("BaseUserChannelGroupChat2");
                });

            modelBuilder.Entity("BotUser", b =>
                {
                    b.Property<ulong>("BotsJoinedId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BotsJoinedId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("BotUser");
                });

            modelBuilder.Entity("MASsenger.BaseChat", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BaseChats");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseChat");
                });

            modelBuilder.Entity("MASsenger.BaseMessage", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DeleterId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DestinationId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeleterId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("SenderId");

                    b.ToTable("BaseMessages");
                });

            modelBuilder.Entity("MASsenger.BaseUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BaseUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("MASsenger.Bot", b =>
                {
                    b.HasBaseType("MASsenger.BaseUser");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("OwnerId");

                    b.HasDiscriminator().HasValue("Bot");
                });

            modelBuilder.Entity("MASsenger.ChannelGroupChat", b =>
                {
                    b.HasBaseType("MASsenger.BaseChat");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("LinkedChannelGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasIndex("LinkedChannelGroupId");

                    b.HasIndex("OwnerId");

                    b.HasDiscriminator().HasValue("ChannelGroupChat");
                });

            modelBuilder.Entity("MASsenger.User", b =>
                {
                    b.HasBaseType("MASsenger.BaseUser");

                    b.Property<ulong?>("BaseMessageId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BaseMessageId");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("BaseUserChannelGroupChat", b =>
                {
                    b.HasOne("MASsenger.ChannelGroupChat", null)
                        .WithMany()
                        .HasForeignKey("ChannelGroupsJoinedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseUserChannelGroupChat1", b =>
                {
                    b.HasOne("MASsenger.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("AdminsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.ChannelGroupChat", null)
                        .WithMany()
                        .HasForeignKey("ChannelGroupsManagedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseUserChannelGroupChat2", b =>
                {
                    b.HasOne("MASsenger.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("BannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.ChannelGroupChat", null)
                        .WithMany()
                        .HasForeignKey("ChannelGroupsBannedFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BotUser", b =>
                {
                    b.HasOne("MASsenger.Bot", null)
                        .WithMany()
                        .HasForeignKey("BotsJoinedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.User", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASsenger.BaseMessage", b =>
                {
                    b.HasOne("MASsenger.BaseUser", "Deleter")
                        .WithMany()
                        .HasForeignKey("DeleterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.BaseChat", "Destination")
                        .WithMany("Messages")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASsenger.BaseUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deleter");

                    b.Navigation("Destination");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MASsenger.BaseUser", b =>
                {
                    b.HasOne("MASsenger.User", null)
                        .WithMany("Blocked")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MASsenger.Bot", b =>
                {
                    b.HasOne("MASsenger.User", "Owner")
                        .WithMany("BotsOwned")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MASsenger.ChannelGroupChat", b =>
                {
                    b.HasOne("MASsenger.ChannelGroupChat", "LinkedChannelGroup")
                        .WithMany()
                        .HasForeignKey("LinkedChannelGroupId");

                    b.HasOne("MASsenger.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinkedChannelGroup");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MASsenger.User", b =>
                {
                    b.HasOne("MASsenger.BaseMessage", null)
                        .WithMany("SeenUsers")
                        .HasForeignKey("BaseMessageId");
                });

            modelBuilder.Entity("MASsenger.BaseChat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("MASsenger.BaseMessage", b =>
                {
                    b.Navigation("SeenUsers");
                });

            modelBuilder.Entity("MASsenger.User", b =>
                {
                    b.Navigation("Blocked");

                    b.Navigation("BotsOwned");
                });
#pragma warning restore 612, 618
        }
    }
}
